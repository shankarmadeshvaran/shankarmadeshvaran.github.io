{"version":3,"sources":["components/Header.jsx","components/Education.jsx"],"names":["Header","props","title","className","Education","theme","useContext","ThemeContext","header","useState","data","setData","width","setWidth","mode","setMode","useEffect","fetch","endpoints","education","method","then","res","json","catch","err","window","innerWidth","style","hideControls","allowDynamicUpdate","useReadMore","items","cardHeight","primary","accentColor","secondary","cardBgColor","chronoTheme","cardForeColor","titleColor","map","icon","src","alt"],"mappings":"6IAAA,6BAaeA,UATf,SAAgBC,GACd,IAAQC,EAAUD,EAAVC,MACR,OAAO,qBAAKC,UAAU,SAAf,SAAyBD,M,6IC+EnBE,UA1Ef,SAAmBH,GACjB,IAAMI,EAAQC,qBAAWC,KACjBC,EAAWP,EAAXO,OACR,EAAwBC,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,QAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAwBJ,mBAAS,wBAAjC,mBAAOK,EAAP,KAAaC,EAAb,KAyBA,OAvBAC,qBAAU,WAAO,IAAD,YACdC,MAAMC,IAAUC,UAAW,CACzBC,OAAQ,QAEPC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACC,GAAD,OAASX,EAAQW,MACtBE,OAAM,SAACC,GAAD,OAASA,MAER,QAAN,EAAAC,cAAA,eAAQC,YAAa,KACvBZ,EAAQ,aAGA,QAAN,EAAAW,cAAA,eAAQC,YAAa,MAER,QAAN,EAAAD,cAAA,eAAQC,aAAc,MAAa,QAAN,EAAAD,cAAA,eAAQC,YAAa,IAD3Dd,EAAS,SAGM,QAAN,EAAAa,cAAA,eAAQC,aAAc,MAAa,QAAN,EAAAD,cAAA,eAAQC,YAAa,KAC3Dd,EAAS,QAETA,EAAS,UAEV,IAGD,qCACE,cAAC,UAAD,CAAQX,MAAOM,IACdE,EACC,cAAC,IAAD,UACE,qBAAKkB,MAAO,CAAEhB,SAAST,UAAU,4BAAjC,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CACE0B,cAAY,EACZC,oBAAkB,EAClBC,aAAa,EACbC,MAAOtB,EAAKS,UACZc,WAAY,IACZnB,KAAMA,EACNT,MAAO,CACL6B,QAAS7B,EAAM8B,YACfC,UAAW/B,EAAM8B,YACjBE,YAAahC,EAAMiC,YAAYD,YAC/BE,cAAelC,EAAMiC,YAAYC,cACjCC,WAAYnC,EAAMiC,YAAYE,YAZlC,SAeE,qBAAKrC,UAAU,eAAf,SACGO,EAAKS,UAAUsB,KAAI,SAACtB,GAAD,OAAgBA,EAAUuB,KAC5C,qBAEEC,IAAKxB,EAAUuB,KAAKC,IACpBC,IAAKzB,EAAUuB,KAAKE,KAFfzB,EAAUuB,KAAKC,KAIpB,kBAMZ,cAAC,UAAD","file":"static/js/4.af519c76.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../App.css';\n\nfunction Header(props) {\n  const { title } = props;\n  return <div className=\"header\">{title}</div>;\n}\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import React, { useEffect, useState, useContext } from 'react';\nimport { Chrono } from 'react-chrono';\nimport { Container } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport Fade from 'react-reveal';\nimport { ThemeContext } from 'styled-components';\nimport endpoints from '../constants/endpoints';\nimport Header from './Header';\nimport FallbackSpinner from './FallbackSpinner';\nimport '../css/education.css';\n\nfunction Education(props) {\n  const theme = useContext(ThemeContext);\n  const { header } = props;\n  const [data, setData] = useState(null);\n  const [width, setWidth] = useState('50vw');\n  const [mode, setMode] = useState('VERTICAL_ALTERNATING');\n\n  useEffect(() => {\n    fetch(endpoints.education, {\n      method: 'GET',\n    })\n      .then((res) => res.json())\n      .then((res) => setData(res))\n      .catch((err) => err);\n\n    if (window?.innerWidth < 576) {\n      setMode('VERTICAL');\n    }\n\n    if (window?.innerWidth < 576) {\n      setWidth('90vw');\n    } else if (window?.innerWidth >= 576 && window?.innerWidth < 768) {\n      setWidth('90vw');\n    } else if (window?.innerWidth >= 768 && window?.innerWidth < 1024) {\n      setWidth('75vw');\n    } else {\n      setWidth('50vw');\n    }\n  }, []);\n\n  return (\n    <>\n      <Header title={header} />\n      {data ? (\n        <Fade>\n          <div style={{ width }} className=\"section-content-container\">\n            <Container>\n              <Chrono\n                hideControls\n                allowDynamicUpdate\n                useReadMore={false}\n                items={data.education}\n                cardHeight={250}\n                mode={mode}\n                theme={{\n                  primary: theme.accentColor,\n                  secondary: theme.accentColor,\n                  cardBgColor: theme.chronoTheme.cardBgColor,\n                  cardForeColor: theme.chronoTheme.cardForeColor,\n                  titleColor: theme.chronoTheme.titleColor,\n                }}\n              >\n                <div className=\"chrono-icons\">\n                  {data.education.map((education) => (education.icon ? (\n                    <img\n                      key={education.icon.src}\n                      src={education.icon.src}\n                      alt={education.icon.alt}\n                    />\n                  ) : null))}\n                </div>\n              </Chrono>\n            </Container>\n          </div>\n        </Fade>\n      ) : <FallbackSpinner /> }\n    </>\n  );\n}\n\nEducation.propTypes = {\n  header: PropTypes.string.isRequired,\n};\n\nexport default Education;\n"],"sourceRoot":""}